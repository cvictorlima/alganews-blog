import { Post, PostService } from 'algatest01-sdk'
import { ServerResponse } from 'http'
import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import ReactPaginate from 'react-paginate'
import FeaturedPost from '../components/FeaturedPost'
import PageGrid from '../components/PageGrid'
import PostCard from '../components/PostCard'
import PostsGrid from '../components/PostsGrid'

interface HomeProps {
  posts?: Post.Paginated
}

export default function Home(props: HomeProps) {
  const router = useRouter()
  const { posts } = props
  return (
    <PageGrid>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {posts?.content?.length && <FeaturedPost postSummary={posts?.content[0]} />}
      <PostsGrid>
        {posts?.content?.slice(1).map(post => <PostCard key={post.id} post={post} />)}
      </PostsGrid>

      <ReactPaginate
        containerClassName={'pagination'}
        pageCount={posts?.totalPages || 0}
        marginPagesDisplayed={0}
        pageRangeDisplayed={3}
        previousLabel={"<"}
        nextLabel={">"}
        hrefBuilder={(page: number) => `/?page=${page}`}
        onPageChange={(page) => {
          router.push(`/?page=${page.selected + 1}`)
        }}

      />
    </PageGrid>
  )
}

function sendToHomePage(res: ServerResponse) {
  res.statusCode = 302
  res.setHeader('Location', '/?page=1')
  return { props: {} }
}

export const getServerSideProps: GetServerSideProps<HomeProps> = async (
  context
) => {
  const { page: _page } = context.query

  const page = Number(_page)

  if (isNaN(page)) {
    return sendToHomePage(context.res)
  }

  const posts = await PostService.getAllPosts({ page: Number(page) - 1 });

  if (!posts.content?.length) {
    return sendToHomePage(context.res)
  }

  return {
    props: {
      posts
    },
  };
};

